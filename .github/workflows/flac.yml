name: flac

on:
  workflow_dispatch:
  push:
    branches: [flac]
    paths:
      - 'flac/*'
      - '.github/workflows/flac.yml'

jobs:
  build:
    name: build ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          # arch: [x86_64, x86, aarch64, armhf]
          arch: [x86_64]
          os: [ubuntu-latest]
          branch: [latest-stable]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up ccache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.ccache
          key: ccache-${{ github.workflow }}-${{ matrix.arch }}-${{ github.runner_id }}
          restore-keys: |
            ccache-${{ github.workflow }}-${{ matrix.arch }}-

      - name: Set up Alpine Linux for ${{ matrix.arch }}
        uses: jirutka/setup-alpine@v1
        with:
          arch: ${{ matrix.arch }}
          branch: ${{ matrix.branch }}
          packages: >
            bash build-base ccache cmake clang lld llvm coreutils findutils gawk git grep tar xz
            pkgconf jq libarchive-tools wget
          shell-name: alpine.sh

      - name: Build Flac inside chroot
        id: build
        env:
          ARCH: ${{ matrix.arch }}
          PKG_NAME: ${{ github.workflow }}
          GH_TOKEN: ${{ github.token }}
        shell: alpine.sh {0}
        run: |
          bash -x $PKG_NAME/build.sh

      - name: Upload artifacts
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.workflow }}-${{ matrix.arch }}
          path: ./**/${{ github.workflow }}*.tar.*

  release:
    if: false
    needs: [build]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Get commit date
        env:
          REPO: ${{ github.repository }}
          SHA: ${{ github.sha }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "DATE=$(gh api repos/$REPO/commits/$SHA --jq '.commit.committer.date' | date -f - +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Upload release assets
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          prerelease: false
          tag: latest
          name: ${{ env.DATE }}
          artifacts: './**/${{ github.workflow }}*.tar.*'

      # - name: Upload release assets
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     fail_on_unmatched_files: true
      #     prerelease: false
      #     tag_name: latest
      #     name: ${{ env.DATE }}
      #     files: |
      #       ./**/opus-tools*.tar.*
